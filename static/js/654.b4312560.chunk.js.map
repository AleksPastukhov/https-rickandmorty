{"version":3,"file":"static/js/654.b4312560.chunk.js","mappings":"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","sources":["components/CharactersList/CharactersList.styled.jsx","components/CharactersList/CharactersList.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","components/pages/Home/Home.styled.jsx","components/pages/Home/Home.jsx","services/theRickandmortyApi.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const CharacterName = styled.h2`\n  margin: 0;\n  padding: 0;\n\n  font-family: 'Roboto';\n  font-weight: 500;\n  font-size: 20px;\n  line-height: calc(30 / 20);\n  letter-spacing: 0.15px;\n\n  color: rgba(0, 0, 0, 0.87);\n`;\n\nexport const CharacterSpecies = styled.p`\n  margin: 0;\n  padding: 0;\n\n  font-family: 'Roboto';\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 21px;\n  line-height: calc(21 / 14);\n  letter-spacing: 0.25px;\n\n  color: rgba(0, 0, 0, 0.6);\n`;\n\nexport const InfoBox = styled.div`\n  padding: 12px 16px;\n`;\n\nexport const HomeList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: stretch;\n  justify-content: center;\n  gap: 20px;\n  margin: 0;\n  padding: 0 0 20px 0;\n`;\n\nexport const Card = styled.li`\n  border-radius: 10px;\n  overflow: hidden;\n  background-color: ${p => p.theme.colors.backgroundColor};\n  transition: transform ${p => p.theme.transition};\n  box-shadow: ${p => p.theme.boxShadow};\n  border-radius: 4px;\n\n  @media screen and (min-width: 768px) {\n  }\n\n  @media screen and (min-width: 1200px) {\n    width: 240px;\n  }\n\n  img {\n    @media screen and (min-width: 1200px) {\n      width: 240px;\n    }\n  }\n\n  &:hover,\n  &:focus {\n    transform: scale(1.04);\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  color: ${p => p.theme.colors.primaryTextColor};\n  text-decoration: none;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport {\n  HomeList,\n  Link,\n  CharacterSpecies,\n  CharacterName,\n  InfoBox,\n  Card,\n} from './CharactersList.styled';\nimport img from '../../images/no-foto.png';\n\nexport const CharactersList = ({ characters }) => {\n  const location = useLocation();\n\n  if (!characters) {\n    return <h2>Loading...</h2>;\n  }\n\n  return (\n    <Suspense fallback={<h2>Loading...</h2>}>\n      <HomeList>\n        {characters.map(({ id, image, name, species }) => (\n          <Card key={id}>\n            <Link to={`/character/${id}`} state={{ from: location }}>\n              <img\n                src={image ? image : img}\n                alt={`Poster ${name}`}\n                width=\"240px\"\n              />\n              <InfoBox>\n                <CharacterName>{name}</CharacterName>\n                <CharacterSpecies>{species}</CharacterSpecies>\n              </InfoBox>\n            </Link>\n          </Card>\n        ))}\n      </HomeList>\n    </Suspense>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 1040px;\n  margin: 0 auto;\n  padding: 15px;\n  border-radius: 8px;\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  margin-bottom: 61px;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: calc(24 / 16);\n\n  & button {\n    display: inline-block;\n    width: 42px;\n    height: 24px;\n    padding: 0;\n    border: 0;\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity ${p => p.theme.transition};\n    background-color: inherit;\n    cursor: pointer;\n    outline: none;\n    &:hover {\n      opacity: 1;\n    }\n    & svg {\n      width: 24px;\n      height: 24px;\n    }\n  }\n\n  & input {\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 16px;\n    line-height: calc(24 / 16);\n    border: none;\n    outline: none;\n    padding: 0;\n    ::placeholder {\n      font: inherit;\n      font-size: 16px;\n      line-height: calc(24 / 16);\n    }\n  }\n`;\n","import { AiOutlineSearch } from 'react-icons/ai';\nimport { SearchForm } from './SearchBar.styled';\n\nexport const SearchBar = ({ onInputChange, value }) => {\n  return (\n    <SearchForm>\n      <button>\n        <AiOutlineSearch />\n      </button>\n\n      <input\n        type=\"text\"\n        name=\"name\"\n        autoComplete=\"off\"\n        value={value}\n        onChange={e => onInputChange(e.target.value)}\n        autoFocus\n        placeholder=\"Filter by name...\"\n      />\n    </SearchForm>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  padding: 86px 10px;\n  width: 100%;\n\n  @media screen and (min-width: 1200px) {\n    width: 1040px;\n  }\n`;\n\nexport const Logo = styled.img`\n  display: block;\n  margin: 0 auto;\n  margin-bottom: 16px;\n  width: 100%;\n  max-width: 600px;\n  max-height: 200px;\n\n  @media screen and (min-width: 1200px) {\n    width: 600px;\n    height: 200px;\n  }\n`;\n\nexport const SectionTitle = styled.h1`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n","import { NavLink, useSearchParams } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport { toast } from 'react-toastify';\nimport {\n  getAllCharacters,\n  getCharacterByName,\n} from '../../../services/theRickandmortyApi';\nimport { CharactersList } from '../../CharactersList/CharactersList';\nimport { SearchBar } from '../../SearchBar/SearchBar';\nimport { SectionTitle, Container, Logo } from '../Home/Home.styled';\nimport logo from '../../../images/logo.jpeg';\n\nconst Home = () => {\n  const [allCharacters, setAllCharacters] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('name') ?? '';\n\n  useEffect(() => {\n    if (searchQuery !== '') {\n      return;\n    }\n    setSearchParams('');\n    getAllCharacters()\n      .then(resp => {\n        const sortAdd = resp.results.sort((firstCharacter, secondCharacter) =>\n          firstCharacter.name.localeCompare(secondCharacter.name)\n        );\n        setAllCharacters(sortAdd);\n      })\n      .catch(err => console.log(err));\n  }, [searchQuery, setSearchParams]);\n\n  useEffect(() => {\n    if (searchQuery === '') {\n      return;\n    }\n\n    const abortController = new AbortController();\n\n    getCharacterByName(searchQuery, abortController)\n      .then(resp => {\n        const sortAdd = resp.results.sort((firstCharacter, secondCharacter) =>\n          firstCharacter.name.localeCompare(secondCharacter.name)\n        );\n        setAllCharacters(sortAdd);\n      })\n      .catch(() => {\n        toast.error(\n          `UpsOops!!! We did not find any characters for your request. Please try changing the character name.`\n        );\n        setAllCharacters([]);\n      });\n    return () => {\n      abortController.abort();\n    };\n  }, [searchQuery]);\n\n  const onInputChange = name => {\n    const nextParams = name !== '' ? { name } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <Container>\n      <SectionTitle>Characters</SectionTitle>\n      <NavLink to=\"/\">\n        <Logo src={logo} alt=\"Logo Rick and morty\" width=\"600px\" />\n      </NavLink>\n      <Suspense fallback={<h2>Loading...</h2>}>\n        <SearchBar onInputChange={onInputChange} value={searchQuery} />\n        <CharactersList characters={allCharacters} />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://rickandmortyapi.com/api/character';\n\nexport async function getAllCharacters() {\n  const respons = await axios.get(BASE_URL);\n  return respons.data;\n}\n\nexport async function getCharacterById(characterId = 1) {\n  const respons = await axios.get(`${BASE_URL}/${characterId}`);\n  return respons.data;\n}\n\nexport async function getCharacterByName(name, abortController) {\n  const options = {\n    params: {\n      name,\n    },\n    signal: abortController.signal,\n  };\n\n  const respons = await axios.get(`${BASE_URL}`, options);\n  return respons.data;\n}\n"],"names":["CharacterName","styled","CharacterSpecies","InfoBox","HomeList","Card","p","theme","colors","backgroundColor","transition","boxShadow","Link","NavLink","primaryTextColor","CharactersList","characters","location","useLocation","Suspense","fallback","map","id","image","name","species","to","state","from","src","img","alt","width","SearchForm","SearchBar","onInputChange","value","type","autoComplete","onChange","e","target","autoFocus","placeholder","Container","Logo","SectionTitle","useState","allCharacters","setAllCharacters","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","getAllCharacters","then","resp","sortAdd","results","sort","firstCharacter","secondCharacter","localeCompare","catch","err","console","log","abortController","AbortController","getCharacterByName","toast","abort","logo","BASE_URL","axios","respons","data","getCharacterById","characterId","options","params","signal"],"sourceRoot":""}
{"version":3,"file":"static/js/654.5f217a40.chunk.js","mappings":"+OAGaA,EAAgBC,EAAAA,EAAAA,GAAH,uGAObC,EAAmBD,EAAAA,EAAAA,EAAH,sBAEhBE,EAAWF,EAAAA,EAAAA,GAAH,sKAURG,EAAOH,EAAAA,EAAAA,GAAH,yRAGK,SAAAI,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,eAAnB,IACG,SAAAH,GAAC,OAAIA,EAAEC,MAAMG,UAAZ,IAEX,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,SAAZ,IAaJC,GAAOV,EAAAA,EAAAA,GAAOW,EAAAA,GAAPX,CAAH,iEACN,SAAAI,GAAC,OAAIA,EAAEC,MAAMC,OAAOM,gBAAnB,I,kBC/BCC,EAAiB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACzBC,GAAWC,EAAAA,EAAAA,MAEjB,OAAKF,GAKH,SAAC,EAAAG,SAAD,CAAUC,UAAU,uCAApB,UACE,SAAChB,EAAD,UACGY,EAAWK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,QAApB,OACd,SAACpB,EAAD,WACE,SAACO,EAAD,CAAMc,GAAE,qBAAgBJ,GAAMK,MAAO,CAAEC,KAAMX,GAA7C,UACE,4BACE,gBACEY,IAAKN,GAAgBO,EACrBC,IAAG,iBAAYP,GACfQ,MAAM,WAER,SAAC/B,EAAD,UAAgBuB,KAChB,SAACrB,EAAD,UAAmBsB,UATdH,EADG,SANb,sCAwBV,E,SCrCYW,EAAa/B,EAAAA,EAAAA,KAAH,8+BAsBG,SAAAI,GAAC,OAAIA,EAAEC,MAAMG,UAAZ,ICrBdwB,EAAY,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC1B,OACE,UAACF,EAAD,CAAYG,SAAUD,EAAtB,WACE,6BACE,SAAC,MAAD,OAGF,kBACEE,KAAK,OACLb,KAAK,OACLc,aAAa,MACbC,WAAS,EACTC,YAAY,wBAInB,ECjBYC,EAAYvC,EAAAA,EAAAA,IAAH,iFAMTwC,EAAOxC,EAAAA,EAAAA,IAAH,yHAQJyC,EAAezC,EAAAA,EAAAA,GAAH,4N,SC6BzB,EArCa,WAAO,IAAD,EACjB,GAA0C0C,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAW,UAAGF,EAAaG,IAAI,YAApB,QAA4B,IAE7CC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,KACGC,MAAK,SAAAC,GACJ,IAAMC,EAAUD,EAAKE,QAAQC,MAAK,SAACC,EAAgBC,GAAjB,OAChCD,EAAenC,KAAKqC,cAAcD,EAAgBpC,KADlB,IAGlCsB,EAAiBU,EAClB,IACAM,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,KAEHX,EAAAA,EAAAA,YAAU,WAAQ,GAAE,CAACF,IASrB,OACE,UAACT,EAAD,YACE,SAACE,EAAD,0BACA,SAACD,EAAD,CAAMb,IAAKqC,EAAMnC,IAAI,sBAAsBC,MAAM,WACjD,UAAC,EAAAb,SAAD,CAAUC,UAAU,uCAApB,WACE,SAACc,EAAD,CAAWC,aAZI,SAAAgC,GACnBA,EAAEC,iBACF,IAAMC,EAAIF,EAAEG,OAAO9C,KAAK+C,MAExBtB,EADyB,KAANoB,EAAW,CAAEA,EAAAA,GAAM,CAAC,EAExC,KAQK,SAACtD,EAAD,CAAgBC,WAAY6B,SAInC,C","sources":["components/CharactersList/CharactersList.styled.jsx","components/CharactersList/CharactersList.jsx","components/SearchBar/SearchBar.styled.jsx","components/SearchBar/SearchBar.jsx","components/pages/Home/Home.styled.jsx","components/pages/Home/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const CharacterName = styled.h2`\n  text-align: center;\n  margin: 0;\n  padding: 10px 5px;\n  font-size: 16px;\n`;\n\nexport const CharacterSpecies = styled.p``;\n\nexport const HomeList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  margin: 0;\n  padding: 0 0 20px 0;\n`;\n\nexport const Card = styled.li`\n  border-radius: 10px;\n  overflow: hidden;\n  background-color: ${p => p.theme.colors.backgroundColor};\n  transition: transform ${p => p.theme.transition};\n  width: 240px;\n  box-shadow: ${p => p.theme.boxShadow};\n  border-radius: 4px;\n\n  img {\n    width: 240px;\n  }\n\n  &:hover,\n  &:focus {\n    transform: scale(1.04);\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  color: ${p => p.theme.colors.primaryTextColor};\n  text-decoration: none;\n`;\n","import { useLocation } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport {\n  HomeList,\n  Link,\n  CharacterSpecies,\n  CharacterName,\n  Card,\n} from './CharactersList.styled';\nimport img from '../../images/no-foto.png';\n\nexport const CharactersList = ({ characters }) => {\n  const location = useLocation();\n\n  if (!characters) {\n    return <h2>Loading...</h2>;\n  }\n\n  return (\n    <Suspense fallback={<h2>Loading...</h2>}>\n      <HomeList>\n        {characters.map(({ id, image, name, species }) => (\n          <Card key={id}>\n            <Link to={`/character/${id}`} state={{ from: location }}>\n              <div>\n                <img\n                  src={image ? image : img}\n                  alt={`Poster ${name}`}\n                  width=\"240px\"\n                />\n                <CharacterName>{name}</CharacterName>\n                <CharacterSpecies>{species}</CharacterSpecies>\n              </div>\n            </Link>\n          </Card>\n        ))}\n      </HomeList>\n    </Suspense>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 15px;\n  border-radius: 8px;\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  margin-bottom: 61px;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: calc(24 / 16);\n\n  & button {\n    display: inline-block;\n    width: 42px;\n    height: 24px;\n    padding: 0;\n    border: 0;\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity ${p => p.theme.transition};\n    background-color: inherit;\n    cursor: pointer;\n    outline: none;\n    &:hover {\n      opacity: 1;\n    }\n    & svg {\n      width: 24px;\n      height: 24px;\n    }\n  }\n\n  & input {\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 16px;\n    line-height: calc(24 / 16);\n    border: none;\n    outline: none;\n    padding: 0;\n    ::placeholder {\n      font: inherit;\n      font-size: 16px;\n      line-height: calc(24 / 16);\n    }\n  }\n`;\n","import { AiOutlineSearch } from 'react-icons/ai';\nimport { SearchForm } from './SearchBar.styled';\n\nexport const SearchBar = ({ onFormSabmit }) => {\n  return (\n    <SearchForm onSubmit={onFormSabmit}>\n      <button>\n        <AiOutlineSearch />\n      </button>\n\n      <input\n        type=\"text\"\n        name=\"name\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Filter by name...\"\n      />\n    </SearchForm>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  padding: 86px 0;\n  width: 1020px;\n`;\n\nexport const Logo = styled.img`\n  display: block;\n  margin: 0 auto;\n  width: 600px;\n  height: 200px;\n  margin-bottom: 16px;\n`;\n\nexport const SectionTitle = styled.h1`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  margin: -1px;\n  border: 0;\n  padding: 0;\n  white-space: nowrap;\n  clip-path: inset(100%);\n  clip: rect(0 0 0 0);\n  overflow: hidden;\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport { getAllCharacters } from '../../../services/theRickandmortyApi';\nimport { CharactersList } from '../../CharactersList/CharactersList';\nimport { SearchBar } from '../../SearchBar/SearchBar';\nimport { SectionTitle, Container, Logo } from '../Home/Home.styled';\nimport logo from '../../../images/logo.jpeg';\n\nconst Home = () => {\n  const [allCharacters, setAllCharacters] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('q') ?? '';\n\n  useEffect(() => {\n    getAllCharacters()\n      .then(resp => {\n        const sortAdd = resp.results.sort((firstCharacter, secondCharacter) =>\n          firstCharacter.name.localeCompare(secondCharacter.name)\n        );\n        setAllCharacters(sortAdd);\n      })\n      .catch(err => console.log(err));\n  }, []);\n\n  useEffect(() => {}, [searchQuery]);\n\n  const onFormSabmit = e => {\n    e.preventDefault();\n    const q = e.target.name.value;\n    const nextParams = q !== '' ? { q } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <Container>\n      <SectionTitle>Characters</SectionTitle>\n      <Logo src={logo} alt=\"Logo Rick and morty\" width=\"600px\" />\n      <Suspense fallback={<h2>Loading...</h2>}>\n        <SearchBar onFormSabmit={onFormSabmit} />\n        <CharactersList characters={allCharacters} />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default Home;\n"],"names":["CharacterName","styled","CharacterSpecies","HomeList","Card","p","theme","colors","backgroundColor","transition","boxShadow","Link","NavLink","primaryTextColor","CharactersList","characters","location","useLocation","Suspense","fallback","map","id","image","name","species","to","state","from","src","img","alt","width","SearchForm","SearchBar","onFormSabmit","onSubmit","type","autoComplete","autoFocus","placeholder","Container","Logo","SectionTitle","useState","allCharacters","setAllCharacters","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","getAllCharacters","then","resp","sortAdd","results","sort","firstCharacter","secondCharacter","localeCompare","catch","err","console","log","logo","e","preventDefault","q","target","value"],"sourceRoot":""}